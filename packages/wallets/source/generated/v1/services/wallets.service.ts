// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.1
// source: v1/services/wallets.service.proto

/* eslint-disable */
import {
  type CallOptions,
  type ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientUnaryCall,
  type handleUnaryCall,
  makeGenericClientConstructor,
  type Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import { CreateWalletRequestMessage } from "../messages/createWalletRequest.message.ts";
import { CreateWalletResponseMessage } from "../messages/createWalletResponse.message.ts";
import { DecreaseWalletBalanceRequestMessage } from "../messages/decreaseWalletBalanceRequest.message.ts";
import { DecreaseWalletBalanceResponseMessage } from "../messages/decreaseWalletBalanceResponse.message.ts";
import { DeleteWalletRequestMessage } from "../messages/deleteWalletRequest.message.ts";
import { DeleteWalletResponseMessage } from "../messages/deleteWalletResponse.message.ts";
import { IncreaseWalletBalanceRequestMessage } from "../messages/increaseWalletBalanceRequest.message.ts";
import { IncreaseWalletBalanceResponseMessage } from "../messages/increaseWalletBalanceResponse.message.ts";
import { ReassignWalletBalanceRequestMessage } from "../messages/reassignWalletBalanceRequest.message.ts";
import { ReassignWalletBalanceResponseMessage } from "../messages/reassignWalletBalanceResponse.message.ts";
import { ShowWalletRequestMessage } from "../messages/showWalletRequest.message.ts";
import { ShowWalletResponseMessage } from "../messages/showWalletResponse.message.ts";

export const protobufPackage = "wallets.v1";

export type WalletsServiceService = typeof WalletsServiceService;
export const WalletsServiceService = {
  createWallet: {
    path: "/wallets.v1.WalletsService/CreateWallet",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: CreateWalletRequestMessage): Buffer =>
      Buffer.from(CreateWalletRequestMessage.encode(value).finish()),
    requestDeserialize: (value: Buffer): CreateWalletRequestMessage => CreateWalletRequestMessage.decode(value),
    responseSerialize: (value: CreateWalletResponseMessage): Buffer =>
      Buffer.from(CreateWalletResponseMessage.encode(value).finish()),
    responseDeserialize: (value: Buffer): CreateWalletResponseMessage => CreateWalletResponseMessage.decode(value),
  },
  decreaseWalletBalance: {
    path: "/wallets.v1.WalletsService/DecreaseWalletBalance",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: DecreaseWalletBalanceRequestMessage): Buffer =>
      Buffer.from(DecreaseWalletBalanceRequestMessage.encode(value).finish()),
    requestDeserialize: (value: Buffer): DecreaseWalletBalanceRequestMessage =>
      DecreaseWalletBalanceRequestMessage.decode(value),
    responseSerialize: (value: DecreaseWalletBalanceResponseMessage): Buffer =>
      Buffer.from(DecreaseWalletBalanceResponseMessage.encode(value).finish()),
    responseDeserialize: (value: Buffer): DecreaseWalletBalanceResponseMessage =>
      DecreaseWalletBalanceResponseMessage.decode(value),
  },
  deleteWallet: {
    path: "/wallets.v1.WalletsService/DeleteWallet",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: DeleteWalletRequestMessage): Buffer =>
      Buffer.from(DeleteWalletRequestMessage.encode(value).finish()),
    requestDeserialize: (value: Buffer): DeleteWalletRequestMessage => DeleteWalletRequestMessage.decode(value),
    responseSerialize: (value: DeleteWalletResponseMessage): Buffer =>
      Buffer.from(DeleteWalletResponseMessage.encode(value).finish()),
    responseDeserialize: (value: Buffer): DeleteWalletResponseMessage => DeleteWalletResponseMessage.decode(value),
  },
  increaseWalletBalance: {
    path: "/wallets.v1.WalletsService/IncreaseWalletBalance",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: IncreaseWalletBalanceRequestMessage): Buffer =>
      Buffer.from(IncreaseWalletBalanceRequestMessage.encode(value).finish()),
    requestDeserialize: (value: Buffer): IncreaseWalletBalanceRequestMessage =>
      IncreaseWalletBalanceRequestMessage.decode(value),
    responseSerialize: (value: IncreaseWalletBalanceResponseMessage): Buffer =>
      Buffer.from(IncreaseWalletBalanceResponseMessage.encode(value).finish()),
    responseDeserialize: (value: Buffer): IncreaseWalletBalanceResponseMessage =>
      IncreaseWalletBalanceResponseMessage.decode(value),
  },
  reassignWalletBalance: {
    path: "/wallets.v1.WalletsService/ReassignWalletBalance",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: ReassignWalletBalanceRequestMessage): Buffer =>
      Buffer.from(ReassignWalletBalanceRequestMessage.encode(value).finish()),
    requestDeserialize: (value: Buffer): ReassignWalletBalanceRequestMessage =>
      ReassignWalletBalanceRequestMessage.decode(value),
    responseSerialize: (value: ReassignWalletBalanceResponseMessage): Buffer =>
      Buffer.from(ReassignWalletBalanceResponseMessage.encode(value).finish()),
    responseDeserialize: (value: Buffer): ReassignWalletBalanceResponseMessage =>
      ReassignWalletBalanceResponseMessage.decode(value),
  },
  showWallet: {
    path: "/wallets.v1.WalletsService/ShowWallet",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: ShowWalletRequestMessage): Buffer =>
      Buffer.from(ShowWalletRequestMessage.encode(value).finish()),
    requestDeserialize: (value: Buffer): ShowWalletRequestMessage => ShowWalletRequestMessage.decode(value),
    responseSerialize: (value: ShowWalletResponseMessage): Buffer =>
      Buffer.from(ShowWalletResponseMessage.encode(value).finish()),
    responseDeserialize: (value: Buffer): ShowWalletResponseMessage => ShowWalletResponseMessage.decode(value),
  },
} as const;

export interface WalletsServiceServer extends UntypedServiceImplementation {
  createWallet: handleUnaryCall<CreateWalletRequestMessage, CreateWalletResponseMessage>;
  decreaseWalletBalance: handleUnaryCall<DecreaseWalletBalanceRequestMessage, DecreaseWalletBalanceResponseMessage>;
  deleteWallet: handleUnaryCall<DeleteWalletRequestMessage, DeleteWalletResponseMessage>;
  increaseWalletBalance: handleUnaryCall<IncreaseWalletBalanceRequestMessage, IncreaseWalletBalanceResponseMessage>;
  reassignWalletBalance: handleUnaryCall<ReassignWalletBalanceRequestMessage, ReassignWalletBalanceResponseMessage>;
  showWallet: handleUnaryCall<ShowWalletRequestMessage, ShowWalletResponseMessage>;
}

export interface WalletsServiceClient extends Client {
  createWallet(
    request: CreateWalletRequestMessage,
    callback: (error: ServiceError | null, response: CreateWalletResponseMessage) => void,
  ): ClientUnaryCall;
  createWallet(
    request: CreateWalletRequestMessage,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: CreateWalletResponseMessage) => void,
  ): ClientUnaryCall;
  createWallet(
    request: CreateWalletRequestMessage,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: CreateWalletResponseMessage) => void,
  ): ClientUnaryCall;
  decreaseWalletBalance(
    request: DecreaseWalletBalanceRequestMessage,
    callback: (error: ServiceError | null, response: DecreaseWalletBalanceResponseMessage) => void,
  ): ClientUnaryCall;
  decreaseWalletBalance(
    request: DecreaseWalletBalanceRequestMessage,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: DecreaseWalletBalanceResponseMessage) => void,
  ): ClientUnaryCall;
  decreaseWalletBalance(
    request: DecreaseWalletBalanceRequestMessage,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: DecreaseWalletBalanceResponseMessage) => void,
  ): ClientUnaryCall;
  deleteWallet(
    request: DeleteWalletRequestMessage,
    callback: (error: ServiceError | null, response: DeleteWalletResponseMessage) => void,
  ): ClientUnaryCall;
  deleteWallet(
    request: DeleteWalletRequestMessage,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: DeleteWalletResponseMessage) => void,
  ): ClientUnaryCall;
  deleteWallet(
    request: DeleteWalletRequestMessage,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: DeleteWalletResponseMessage) => void,
  ): ClientUnaryCall;
  increaseWalletBalance(
    request: IncreaseWalletBalanceRequestMessage,
    callback: (error: ServiceError | null, response: IncreaseWalletBalanceResponseMessage) => void,
  ): ClientUnaryCall;
  increaseWalletBalance(
    request: IncreaseWalletBalanceRequestMessage,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: IncreaseWalletBalanceResponseMessage) => void,
  ): ClientUnaryCall;
  increaseWalletBalance(
    request: IncreaseWalletBalanceRequestMessage,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: IncreaseWalletBalanceResponseMessage) => void,
  ): ClientUnaryCall;
  reassignWalletBalance(
    request: ReassignWalletBalanceRequestMessage,
    callback: (error: ServiceError | null, response: ReassignWalletBalanceResponseMessage) => void,
  ): ClientUnaryCall;
  reassignWalletBalance(
    request: ReassignWalletBalanceRequestMessage,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: ReassignWalletBalanceResponseMessage) => void,
  ): ClientUnaryCall;
  reassignWalletBalance(
    request: ReassignWalletBalanceRequestMessage,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: ReassignWalletBalanceResponseMessage) => void,
  ): ClientUnaryCall;
  showWallet(
    request: ShowWalletRequestMessage,
    callback: (error: ServiceError | null, response: ShowWalletResponseMessage) => void,
  ): ClientUnaryCall;
  showWallet(
    request: ShowWalletRequestMessage,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: ShowWalletResponseMessage) => void,
  ): ClientUnaryCall;
  showWallet(
    request: ShowWalletRequestMessage,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: ShowWalletResponseMessage) => void,
  ): ClientUnaryCall;
}

export const WalletsServiceClient = makeGenericClientConstructor(
  WalletsServiceService,
  "wallets.v1.WalletsService",
) as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): WalletsServiceClient;
  service: typeof WalletsServiceService;
  serviceName: string;
};
