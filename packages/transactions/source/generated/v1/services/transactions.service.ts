// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.1
// source: v1/services/transactions.service.proto

/* eslint-disable */
import {
  type CallOptions,
  type ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientUnaryCall,
  type handleUnaryCall,
  makeGenericClientConstructor,
  type Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import { CreateTransactionRequestMessage } from "../messages/createTransactionRequest.message.ts";
import { CreateTransactionResponseMessage } from "../messages/createTransactionResponse.message.ts";

export const protobufPackage = "transactions.v1";

export type TransactionsServiceService = typeof TransactionsServiceService;
export const TransactionsServiceService = {
  createTransaction: {
    path: "/transactions.v1.TransactionsService/CreateTransaction",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: CreateTransactionRequestMessage): Buffer =>
      Buffer.from(CreateTransactionRequestMessage.encode(value).finish()),
    requestDeserialize: (value: Buffer): CreateTransactionRequestMessage =>
      CreateTransactionRequestMessage.decode(value),
    responseSerialize: (value: CreateTransactionResponseMessage): Buffer =>
      Buffer.from(CreateTransactionResponseMessage.encode(value).finish()),
    responseDeserialize: (value: Buffer): CreateTransactionResponseMessage =>
      CreateTransactionResponseMessage.decode(value),
  },
} as const;

export interface TransactionsServiceServer extends UntypedServiceImplementation {
  createTransaction: handleUnaryCall<CreateTransactionRequestMessage, CreateTransactionResponseMessage>;
}

export interface TransactionsServiceClient extends Client {
  createTransaction(
    request: CreateTransactionRequestMessage,
    callback: (error: ServiceError | null, response: CreateTransactionResponseMessage) => void,
  ): ClientUnaryCall;
  createTransaction(
    request: CreateTransactionRequestMessage,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: CreateTransactionResponseMessage) => void,
  ): ClientUnaryCall;
  createTransaction(
    request: CreateTransactionRequestMessage,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: CreateTransactionResponseMessage) => void,
  ): ClientUnaryCall;
}

export const TransactionsServiceClient = makeGenericClientConstructor(
  TransactionsServiceService,
  "transactions.v1.TransactionsService",
) as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): TransactionsServiceClient;
  service: typeof TransactionsServiceService;
  serviceName: string;
};
